To be implemented:
- arrays
- objects
- parallelism
- out method arguments
- handling class inheritance
- transpiler events/transformation hooks


Notes:
- Parallelisation:
	- if x thread, x process (what calls the procedure), to MaxDegreeOfParallelism
	- one enabling signal for all processes ("if enabled" in them)
	- passing parameters with signals
	- synchronising "finished" signal
	- if MaxDegreeOfParallelism is too small then after return reload signals and rerun
	- if there's an await/callback divide method into three parts: method's beginning, parallelised, end/callback
- Class = record (private fields included) + procedures
- Static members can't be interface (static can't be proxied)
- External types (like Math class calls) can be added to the AstBuilder so their relevant parts can be transpiled too
- Statically sized entities (like variables, fixed-sized arrays...) can be directly transpiled, dynamically sized ones (like arrays having a 
runtime size) should be transformed into memory allocations